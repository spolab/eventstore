name: EventStore

on: [push, pull_request]

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password123
  POSTGRES_DB: test
  POSTGRES_URL: postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB?sslmode=disable

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.2
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: $POSTGRES_DB
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run migrations
        run: psql -f pkg/postgres/base.sql $POSTGRES_URL
      - name: Wait for Mongo to start
        run: |
          until nc -z localhost 27017; do
            sleep 1;
          done        
      - name: Wait for Postgres to start
        run: |
          until nc -z localhost 5432; do
            sleep 1;
          done        
      - name: Generate the gRPC stubs
        uses: spolab/protoc-action@v0.0.13
        with:
          args: -Ischema --go_out=paths=source_relative:gen --go-grpc_out=paths=source_relative:gen ./schema/eventstore.proto
      - name: Test the code
        run: go test ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3    
      - name: Generate the gRPC stubs
        uses: spolab/protoc-action@v0.0.13
        with:
          args: -Ischema --go_out=paths=source_relative:gen --go-grpc_out=paths=source_relative:gen ./schema/eventstore.proto
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3    
      - name: Setup Go environment
        uses: actions/setup-go@v4.0.0
      - name: Generate the gRPC stubs
        uses: spolab/protoc-action@v0.0.13
        with:
          args: -Ischema --go_out=paths=source_relative:gen --go-grpc_out=paths=source_relative:gen ./schema/eventstore.proto
      - name: Build the EventStore binary
        run: CGO_ENABLED=0 go build -o bin/eventstore cmd/main.go
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: eventstore
          path: bin/eventstore

  publish:
    runs-on: ubuntu-latest
    needs: [build, test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3    
      - uses: actions/download-artifact@v3
        with:
          name: eventstore
          path: bin/eventstore
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}    
      - name: Release Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ghcr.io/spolab/eventstore:${{ github.ref_name }}
          args: version=${{ github.ref_name }}
name: EventStore

on: 
  push:
    paths:
      - .github/workflows/*
      - server/**/*
      - schema/*
  pull_request:
    paths:
      - .github/workflows/*    
      - server/**/*
      - schema/*

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password123
  POSTGRES_DB: test
  POSTGRES_URL: postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB?sslmode=disable
  PROTOC_OPTS: -Ischema --go_out=paths=source_relative:server/gen --go-grpc_out=paths=source_relative:server/gen schema/eventstore.proto

jobs:

  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.2
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: $POSTGRES_DB
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v4.0.0
        with:
          go-version: 1.20.3
          cache-dependency-path: server/go.sum

      - name: Wait for Mongo to start
        run: |
          until nc -z localhost 27017; do
            sleep 1;
          done        

      - name: Wait for Postgres to start
        run: |
          until nc -z localhost 5432; do
            sleep 1;
          done        

      - name: Load the PostgreSQL schema
        run: psql -f server/pkg/postgres/base.sql $POSTGRES_URL

      - name: Download the Go dependencies
        run: cd server && go mod download

      - name: Generate the gRPC stubs
        uses: spolab/protoc-action@v0.0.13
        with:
          args: -Ischema --go_out=paths=source_relative:server/gen --go-grpc_out=paths=source_relative:server/gen schema/eventstore.proto

      - name: Test the code
        run: cd server && go test ./...

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -w server server/...

      - name: Build the EventStore binary
        run: cd server && go build -o bin/eventstore cmd/main.go

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}    

      - name: Release Docker Image
        uses: docker/build-push-action@v4
        with:
          context: server
          file: server/docker/Dockerfile
          push: true
          tags: ghcr.io/spolab/eventstore:${{ github.ref_name }}
          args: version=${{ github.ref_name }}